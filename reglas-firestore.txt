rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  	// --> Reglas para los Post|Publicaciones <--
    match /posts/{postDocumentID} {
    	allow read: if request.auth != null;
      allow create, update: if 
      	request.auth != null && // Validamos solo si está autenticado
      	request.auth.uid == request.resource.data.userUID; // Aquí validamos que el usuario sea, el mismo responsable en crear un nuevo post (validamos por decirlo así rapidamente: su firma (autenticamos|identificamos que sea el usuario))
      	// && request.auth.token.email == request.resource.data.email; // Aquí, de nuevo, validamos la firma del usuario para confirmar que sea él quién realiza la solicitud (En mi caso, no envío el email al crear un nuevo post por lo tanto, no me es necesario esta condición pero, la dejo para tenerla en cuenta a futuro)
      allow update, delete: if request.auth.uid == "4i9LcOJbOphoGFy044laqQHin5d2";
      
      
      // --> Reglas para Comentarios <--
      match /comments/{commentDocumentID} {
      	allow read: if request.auth != null;
        allow create: if
        	request.auth != null &&
          request.auth.uid == request.resource.data.userUID;
        allow update, delete: if request.auth.uid == "4i9LcOJbOphoGFy044laqQHin5d2";
      }
        
    }
    
    
    // Reglas para Perfiles de usuario
    match /usersProfiles/{documentWithNewUserUID} {
    	allow read: if request.auth != null;
      // Solo se puede crear o editar el perfil mientras sea mi documento (documento propio del usuario)
      allow create, update: if
      	request.auth != null &&
        request.auth.uid == documentWithNewUserUID; // Como la variable es el documento que se crea, su ID va a ser seteado con el UID del nuevo usuario por lo tanto se valida que sean iguales para confirmar que el cliente es el que crea el nuevo usuario ("solo puedo crear un usuario si es para mí")
    }
    
    // --> Reglas para Chat privado <--
    match /privateChats/{chatDocumentID} {
    	allow read: if
      	request.auth != null && 
      	request.auth.uid in resource.data.users; // Verificamos que el UID de usuario se encuentre en el mapa|objeto "users"
      allow create: if
      	request.auth != null &&
        request.auth.uid in request.resource.data.users;
        
        // --> Reglas para la subcolleción <--
        // (2da forma de crear reglas a una subcolleción "Anidandola a esta ruta" para eso usamos "match y la ruta o ruta relativa a la que ya se declaró en la reglas (se ven en el match de este scope)")
      match /messages/{messageDocumentID} {
        allow read: if
          request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/privateChats/$(chatDocumentID)).data.users; // Para usar get() tenemos que pasarle toda la ruta completa (o sea desde la raíz) para poder hacer la consulta (get -> obtener) completa a esa parte|documento con datos que necesitamos|requerimos para poder hacer las validaciones correspondientes. (Aqui lo que haces es traer un documento que exite, antes de esta subcolleción "messages" para validar sus datos) *NOTA IMPORTANTE: Para validar las variables de la ruta, en este caso usamos $(nombreDeVariable) en vez de usar {nombreDeVariable} 
        allow create: if
          request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/privateChats/$(chatDocumentID)).data.users &&
          request.auth.uid == request.resource.data.userID; // Y validamos la firma (firma me refiero a una autenticación donde valido que el usuario que crea el nuevo mensaje sea verdaderamente él. Esto evita que envíe mensajes a nombre de otro usuario|persona, sino que se confirme que es el usuario que firma|afirma|confirma que es él quien envía el mensaje)
        }
    }
    // match /privateChats/{chatDocumentID}/messages/{messages} {} // -> Una forma de crear reglas para una subcolleción es poniendo la ruta completa hacia ella. La segunda forma es anidada en el scope de reglas previas de algún documento|colleción que estan en la ruta hacia algun documento de la subcolleción a la que quieras agregar reglas (en este caso usé esa segunda opcion dentro de las reglas de "privateChats" justo arriba de este comentario :D)
  }
}